services:
  telegram-bot:
    container_name: telegram-bot
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./apps/telegram-bot/Dockerfile
      target: production
    environment:
      - TELEGRAM_TOKEN=
      - SQL_HOST=bot-postgres
      - SQL_PORT=5433
      - SQL_USER=postgres
      - SQL_PASSWORD=admin
      - API_URL=http://rest_api:3000/
      - TZ=Asia/Yekaterinburg
    depends_on:
      - bot-postgres
      - rest
    networks:
      - shgpu-table-network
  parser:
    container_name: tparser
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./apps/parser/Dockerfile
      target: production
    environment:
      - STORAGE_PATH=/usr/src/app/parser/storage/
      - SQL_HOST=postgres
      - SQL_USER=postgres
      - SQL_PORT=5432
      - SQL_PASSWORD=admin
      - NODE_ENV=production
      - LOGS_PATH=/usr/src/app/parser/logs/
      - TZ=Asia/Yekaterinburg
      - RABBITMQ_CONN_STRING=amqp://rabbitmq:5672
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - shgpu-table-network
  rest:
    container_name: rest_api
    build:
      context: .
      dockerfile: ./apps/rest/Dockerfile
      target: production
    environment:
      - SQL_HOST=postgres
      - SQL_PORT=5432
      - SQL_USER=postgres
      - SQL_PASSWORD=admin
      - SQL_DATABASE=shgpu-table
      - RABBITMQ_CONN_STRING=amqp://rabbitmq:5672
      - TZ=Asia/Yekaterinburg
    depends_on:
      - rabbitmq
      - postgres
    ports:
      - 3000:3000
    networks:
      - shgpu-table-network

  bot-postgres:
    container_name: bot-postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=shgpu-table-bot
    ports:
      - 5433:5433
    command: -p 5433
    volumes:
      - .:/var/lib/postgresql/shgpu-table
      - ./apps/telegram-bot/src/db/init.sql:/docker-entrypoint-initdb.d/bot-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d shgpu-table-bot"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512MB
    networks:
      - shgpu-table-network

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=shgpu-table
    ports:
      - 5432:5432
    volumes:
      - .:/var/lib/postgresql/shgpu-table
      - ./apps/parser/src/db/queries/init.sql:/docker-entrypoint-initdb.d/parser-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d shgpu-table"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512MB
    networks:
      - shgpu-table-network
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "danluki02@yandex.ru"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - 5050:80
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512MB
    networks:
      - shgpu-table-network
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.10-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_USER_PASS: guest
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - shgpu-table-network

networks:
  shgpu-table-network:
    driver: bridge